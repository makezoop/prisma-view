{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/lagz0ne/prisma-view/pkgs/server/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/lagz0ne/prisma-view/pkgs/server/client/Diagram.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Diagram, { createSchema, useSchema } from \"beautiful-react-diagrams\";\nimport \"beautiful-react-diagrams/styles.css\"; // the diagram model\n\nvar initialSchema = createSchema({\n  nodes: [{\n    id: \"node-1\",\n    content: \"Node 1\",\n    coordinates: [250, 60]\n  }, {\n    id: \"node-2\",\n    content: \"Node 2\",\n    coordinates: [100, 200]\n  }, {\n    id: \"node-3\",\n    content: \"Node 3\",\n    coordinates: [250, 220]\n  }, {\n    id: \"node-4\",\n    content: \"Node 4\",\n    coordinates: [400, 200]\n  }],\n  links: [{\n    input: \"node-1\",\n    output: \"node-2\"\n  }, {\n    input: \"node-1\",\n    output: \"node-3\"\n  }, {\n    input: \"node-1\",\n    output: \"node-4\"\n  }]\n});\n\nvar UncontrolledDiagram = function UncontrolledDiagram() {\n  _s();\n\n  // create diagrams schema\n  var _useSchema = useSchema(initialSchema),\n      _useSchema2 = _slicedToArray(_useSchema, 2),\n      schema = _useSchema2[0],\n      onChange = _useSchema2[1].onChange;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"22.5rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Diagram, {\n      schema: schema,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UncontrolledDiagram, \"Zq0rxzWuJTzNNGPu1c/318KlVeE=\", false, function () {\n  return [useSchema];\n});\n\n_c = UncontrolledDiagram;\nexport default UncontrolledDiagram;\n\nvar _c;\n\n$RefreshReg$(_c, \"UncontrolledDiagram\");","map":{"version":3,"sources":["/home/lagz0ne/prisma-view/pkgs/server/client/Diagram.tsx"],"names":["Diagram","createSchema","useSchema","initialSchema","nodes","id","content","coordinates","links","input","output","UncontrolledDiagram","schema","onChange","height"],"mappings":";;;;;;;AAAA,OAAOA,OAAP,IAAkBC,YAAlB,EAAgCC,SAAhC,QAAiD,0BAAjD;AACA,OAAO,qCAAP,C,CAEA;;AACA,IAAMC,aAAa,GAAGF,YAAY,CAAC;AACjCG,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,OAAO,EAAE,QAAzB;AAAmCC,IAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,EAAN;AAAhD,GADK,EAEL;AAAEF,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,OAAO,EAAE,QAAzB;AAAmCC,IAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,GAAN;AAAhD,GAFK,EAGL;AAAEF,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,OAAO,EAAE,QAAzB;AAAmCC,IAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,GAAN;AAAhD,GAHK,EAIL;AAAEF,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,OAAO,EAAE,QAAzB;AAAmCC,IAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,GAAN;AAAhD,GAJK,CAD0B;AAOjCC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GADK,EAEL;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAFK,EAGL;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GAHK;AAP0B,CAAD,CAAlC;;AAcA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAAA;;AAChC;AADgC,mBAEDT,SAAS,CAACC,aAAD,CAFR;AAAA;AAAA,MAEzBS,MAFyB;AAAA,MAEfC,QAFe,kBAEfA,QAFe;;AAIhC,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEF,MAAjB;AAAyB,MAAA,QAAQ,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CATD;;GAAMF,mB;UAE2BT,S;;;KAF3BS,mB;AAWN,eAAeA,mBAAf","sourcesContent":["import Diagram, { createSchema, useSchema } from \"beautiful-react-diagrams\";\nimport \"beautiful-react-diagrams/styles.css\";\n\n// the diagram model\nconst initialSchema = createSchema({\n  nodes: [\n    { id: \"node-1\", content: \"Node 1\", coordinates: [250, 60] },\n    { id: \"node-2\", content: \"Node 2\", coordinates: [100, 200] },\n    { id: \"node-3\", content: \"Node 3\", coordinates: [250, 220] },\n    { id: \"node-4\", content: \"Node 4\", coordinates: [400, 200] },\n  ],\n  links: [\n    { input: \"node-1\", output: \"node-2\" },\n    { input: \"node-1\", output: \"node-3\" },\n    { input: \"node-1\", output: \"node-4\" },\n  ],\n});\n\nconst UncontrolledDiagram = () => {\n  // create diagrams schema\n  const [schema, { onChange }] = useSchema(initialSchema);\n\n  return (\n    <div style={{ height: \"22.5rem\" }}>\n      <Diagram schema={schema} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default UncontrolledDiagram;\n"]},"metadata":{},"sourceType":"module"}