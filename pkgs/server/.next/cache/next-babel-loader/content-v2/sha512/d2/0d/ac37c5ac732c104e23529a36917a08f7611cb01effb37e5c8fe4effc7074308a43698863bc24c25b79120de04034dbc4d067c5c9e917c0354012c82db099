{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lagz0ne/prisma-view/pkgs/server/pages/index.tsx\";\nimport dynamic from \"next/dynamic\";\nconst Diagram = dynamic(() => import(\"../client/Diagram\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../client/Diagram\")],\n    modules: [\"../client/Diagram\"]\n  }\n});\nexport default function Home({\n  schema,\n  dmmf\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(schema, null, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(dmmf, null, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nimport { getDMMF } from \"@prisma/sdk\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nconst schemaPath = path.resolve(process.cwd(), \"schema.prisma\");\nexport async function getServerSideProps() {\n  // const formatedSchemaString = await formatSchema({schemaPath});\n  const schema = fs.readFileSync(schemaPath, \"utf-8\");\n  const dmmf = await getDMMF({\n    datamodel: schema\n  });\n  return {\n    props: {\n      schema,\n      dmmf\n    }\n  };\n}","map":{"version":3,"sources":["/home/lagz0ne/prisma-view/pkgs/server/pages/index.tsx"],"names":["dynamic","Diagram","ssr","Home","schema","dmmf","JSON","stringify","getDMMF","fs","path","schemaPath","resolve","process","cwd","getServerSideProps","readFileSync","datamodel","props"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA,MAAMC,OAAO,GAAGD,OAAO,CAAC,MAAM,OAAO,mBAAP,CAAP,EAAoC;AAAEE,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCAAtB,mBAAsB;AAAA,cAAtB,mBAAsB;AAAA;AAAA,CAApC,CAAvB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA,gBAAMC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAME,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqB,IAArB,EAA2B,CAA3B;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;AAED,SAASG,OAAT,QAAiD,aAAjD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,OAAL,CAAaC,OAAO,CAACC,GAAR,EAAb,EAA4B,eAA5B,CAAnB;AAEA,OAAO,eAAeC,kBAAf,GAAoC;AACzC;AACA,QAAMX,MAAM,GAAGK,EAAE,CAACO,YAAH,CAAgBL,UAAhB,EAA4B,OAA5B,CAAf;AACA,QAAMN,IAAI,GAAG,MAAMG,OAAO,CAAC;AAAES,IAAAA,SAAS,EAAEb;AAAb,GAAD,CAA1B;AAEA,SAAO;AACLc,IAAAA,KAAK,EAAE;AACLd,MAAAA,MADK;AAELC,MAAAA;AAFK;AADF,GAAP;AAMD","sourcesContent":["import dynamic from \"next/dynamic\";\n\nconst Diagram = dynamic(() => import(\"../client/Diagram\"), { ssr: false });\n\nexport default function Home({ schema, dmmf }) {\n  return (\n    <>\n      <div>{JSON.stringify(schema, null, 4)}</div>\n      <div>{JSON.stringify(dmmf, null, 4)}</div>\n    </>\n  );\n}\n\nimport { getDMMF, getConfig, formatSchema } from \"@prisma/sdk\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nconst schemaPath = path.resolve(process.cwd(), \"schema.prisma\");\n\nexport async function getServerSideProps() {\n  // const formatedSchemaString = await formatSchema({schemaPath});\n  const schema = fs.readFileSync(schemaPath, \"utf-8\");\n  const dmmf = await getDMMF({ datamodel: schema });\n\n  return {\n    props: {\n      schema,\n      dmmf,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}